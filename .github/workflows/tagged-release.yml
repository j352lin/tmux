name: "tagged-release"

on:
  push:
    branches:
      - master

jobs:
  gh_tagged_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Remove -next prefix from version in configure.ac"
        run: sed -i '/AC_INIT(\[tmux\], /s/next-//' configure.ac

      - name: "Extract version numer"
        run: |
          VERSION=$(grep 'AC_INIT(\[tmux\],' configure.ac | sed -n 's/.*AC_INIT(\[tmux\], \([0-9]*\.[0-9]*\.[0-9]*\)).*/\1/p')
          echo "Current version: $VERSION"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add configure.ac
          git commit -m "Change version to $NEW_VERSION in configure.ac"
          git push origin HEAD
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Setup
        run: |
          NEW_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          BASE_URL=`git config --get remote.origin.url | sed 's/\.git//g'`
          echo "BASE_URL=$BASE_URL" >> $GITHUB_ENV

      - name: Add to CHANGES
        id: add_to_changes
        run: |
          PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))
          git log --pretty=format:'%s' $PREV_TAG..HEAD > /tmp/tmux-tagged-release
          sed 's/^/* /' /tmp/tmux-tagged-release > /tmp/tmp_file
          echo CHANGES FROM $PREV_TAG to $NEW_TAG | cat - /tmp/tmp_file > /tmp/tmux-tagged-release
          sed G /tmp/tmux-tagged-release > /tmp/tmp_file
          cat /tmp/tmp_file | cat - CHANGES > /tmp/tmux-tagged-release
          cat /tmp/tmux-tagged-release > CHANGES
          rm /tmp/tmux-tagged-release
          rm /tmp/tmp_file
          git add CHANGES
          git commit -m "change CHANGES for new release"
          git push

      - name: "Checkout source code"
        uses: "actions/checkout@v2.3.4"
        with:
          lfs: true
          fetch-depth: 0

      - id: "yarn-cache"
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: "actions/cache@v2.1.6"
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - run: "sudo apt-get update -qq"
      - run: "sudo apt-get -y install bison \
          autotools-dev \
          libncurses5-dev \
          libevent-dev \
          pkg-config \
          libutempter-dev \
          build-essential"
      - run: "sh .github/travis/before-install.sh"
      - run: "sh .github/travis/build.sh"
      - run: "make dist"

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          title: "${{ env.NEW_TAG }}"
          files: |
            *.tar.gz
        id: "automatic_releases"

      - name: Create new release issue
        run: |
          previous_issue_number=$(gh issue list \
            --label "$LABELS" \
            --json number \
            --jq '.[0].number')
          if [[ -n $previous_issue_number ]]; then
            gh issue close "$previous_issue_number"
            gh issue unpin "$previous_issue_number"
          fi
          new_issue_url=$(gh issue create \
            --title "$NEW_TAG questions and comments" \
            --label "release" \
            --body "$BODY")
          echo "ISSUE_URL=$new_issue_url" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          BODY: |
            Ask or discuss any quick questions about ${{ env.NEW_TAG }} here please.
            Do not use this issue for bug reports, please open a new issue with full information, see [CONTRIBUTING](${{ env.BASE_URL }}/blob/master/.github/CONTRIBUTING.md).

            [The ${{ env.NEW_TAG }} CHANGES file is here](${{ env.BASE_URL }}/blob/master/CHANGES).

            As always, thanks to the many people who contributed to both this and to previous releases.

      - name: "Update Release Notes"
        run: |
          gh release edit $NEW_TAG -n "For a list of changes [please read the CHANGES file](${{ env.BASE_URL }}/blob/master/CHANGES); for release notes [please see this issue]($ISSUE_URL)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Update next version number"
        run: |
          IFS='.' read -ra VER <<< "$VERSION"
          NEW_PATCH=$((VER[2]+1))
          NEW_VERSION="${VER[0]}.${VER[1]}.$NEW_PATCH"

          # Write back to file
          sed -i "s/AC_INIT(\[tmux\], $VERSION)/AC_INIT([tmux], next-$NEW_VERSION)/" configure.ac
          git add configure.ac
          git commit -m "Bump version to next-$NEW_VERSION"
          git push origin HEAD
