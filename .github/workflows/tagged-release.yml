name: "tagged-release"

on:
  push:
    tags:
      - "v*"

jobs:
  gh_tagged_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Add to CHANGES
        id: add_to_changes
        run: |
          git checkout master
          git config user.name github-actions
          git config user.email github-actions@github.com
          NEW_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))
          git log --pretty=format:'%s' $PREV_TAG..HEAD > /tmp/tmux-tagged-release
          sed 's/^/* /' /tmp/tmux-tagged-release > /tmp/tmp_file
          echo CHANGES FROM $PREV_TAG to $NEW_TAG | cat - /tmp/tmp_file > /tmp/tmux-tagged-release
          sed G /tmp/tmux-tagged-release > /tmp/tmp_file
          cat /tmp/tmp_file | cat - CHANGES > /tmp/tmux-tagged-release
          cat /tmp/tmux-tagged-release > CHANGES
          rm /tmp/tmux-tagged-release
          rm /tmp/tmp_file
          git add CHANGES
          git commit -m "change CHANGES for new release"
          git push

      - name: "Checkout source code"
        uses: "actions/checkout@v2.3.4"
        with:
          lfs: true
          fetch-depth: 0

      - id: "yarn-cache"
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: "actions/cache@v2.1.6"
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - run: "sudo apt-get update -qq"
      - run: "sudo apt-get -y install bison \
          autotools-dev \
          libncurses5-dev \
          libevent-dev \
          pkg-config \
          libutempter-dev \
          build-essential"
      - run: "sh .github/travis/before-install.sh"
      - run: "sh .github/travis/build.sh"
      - run: "make dist"

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            *.tar.gz
        id: "automatic_releases"

      - name: Create new release issue
        run: |
          previous_issue_number=$(gh issue list \
            --label "$LABELS" \
            --json number \
            --jq '.[0].number')
          if [[ -n $previous_issue_number ]]; then
            gh issue close "$previous_issue_number"
            gh issue unpin "$previous_issue_number"
          fi
          new_issue_url=$(gh issue create \
            --title "$NEW_TAG questions and comments" \
            --label "release" \
            --body "$BODY")
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          BODY: |
            Ask or discuss any quick questions about $NEW_TAG here please.
            Do not use this issue for bug reports, please open a new issue with full information, see [CONTRIBUTING](.github/CONTRIBUTING.md).

            [The $NEW_TAG CHANGES file is here](CHANGES).

            As always, thanks to the many people who contributed to both this and to previous releases.

      - name: "Update Release Notes"
        run: |
          gh release edit $NEW_TAG --notes-file RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
